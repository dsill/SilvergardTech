<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/22/2016 7:28:42 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DS-DESKTOP"
  DTS:CreatorName="DS-DESKTOP\Daniel"
  DTS:DTSID="{FA931C68-3C91-43FF-8685-1513F3494904}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.1601.5"
  DTS:LocaleID="1033"
  DTS:ObjectName="LookupImport"
  DTS:PackageType="5"
  DTS:ProtectionLevel="2"
  DTS:VersionBuild="22"
  DTS:VersionGUID="{F1EA7728-6C43-45DB-99A8-566CA5791887}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DBConnection]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{49F5D3FD-5660-46AB-A9FF-1880066130D0}"
      DTS:ObjectName="DBConnection">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::DB_ConnectionString]</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="Password">@[$Package::DBPassword]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=DS-DESKTOP;User ID=ImportWorker;Initial Catalog=AngeionCalcs;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;">
          <EncryptedData
            Type="http://www.w3.org/2001/04/xmlenc#Element"
            Salt="MX+JBU/uSQ=="
            IV="0fS+97oyMAA=" xmlns="http://www.w3.org/2001/04/xmlenc#">
            <EncryptionMethod
              Algorithm="http://www.w3.org/2001/04/xmlenc#tripledes-cbc" />
            <CipherData>
              <CipherValue>0fS+97oyMAAcdXehB6EaacUK3m4cmydHBKNiRGjPHIRGINp7ENCKPOzYP4/LWC+/AtRjIAXc9IrKA6LpMgJk1JzD9iQskOOh/cDBg4JGRQ/yqHUYzw7r/s4c/bvO6nF9Nnjks+tOK3JuoFsKKGzZaRzKCpRCxQPuZ37i2Z4IA5g=</CipherValue>
            </CipherData>
          </EncryptedData>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{910A2856-AA27-4A79-B2F9-735D135EB7DD}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=E:\Silvergard Technologies, Inc\Consulting\Angeion Group\FTP\Lookups\DBLookups.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{150E1C25-7669-4872-B180-45B49F7EF58F}"
      DTS:ObjectName="DBPassword"
      DTS:Required="True"
      DTS:Sensitive="True">
      <DTS:Property
        DTS:Name="ParameterValue">
        <EncryptedData
          IV="IBDplhQ7NkQ="
          Salt="QvlCJJdkow=="
          Type="http://www.w3.org/2001/04/xmlenc#Element" xmlns="http://www.w3.org/2001/04/xmlenc#">
          <EncryptionMethod
            Algorithm="http://www.w3.org/2001/04/xmlenc#tripledes-cbc" />
          <CipherData>
            <CipherValue>IBDplhQ7NkTdJd1VjF7YreMfPq/6J3lTgs0fozY3DJ0CPfL6+5grgkrpe3Ohlxe1+10ql9ENml1a9Gn1TgXtiJta5ah0yhwP+WIrPzt1yf/KC6p6hWOCtdErOKCidlYQsIyQjlKP2ozirglM9HlEoG2MDh4omQBC/cePF+a3WpunYBx2NgpzOQ==</CipherValue>
          </CipherData>
        </EncryptedData>
      </DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{8A37C1D3-982A-46DA-A21D-A93EB397F409}"
      DTS:ObjectName="DB_ConnectionString">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Data Source=DS-DESKTOP;User ID=ImportWorker;Initial Catalog=AngeionCalcs;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E2463FAD-0181-44AE-9188-0298931F90FA}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::DB_ConnectionString]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varDBConnection">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=DS-DESKTOP;User ID=ImportWorker;Initial Catalog=AngeionCalcs;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Insert &amp; Update - lk_ErrorMessage"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{F6E3F761-EB9F-4B23-BDD4-39616ED19B3F}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Insert &amp; Update - lk_ErrorMessage"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Insert &amp; Update - lk_ErrorMessage\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Insert &amp; Update - lk_ErrorMessage\Conditional Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Conditional Split.Inputs[Conditional Split Input].Columns[errormsgid]"
                      cachedDataType="i4"
                      cachedName="errormsgid"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Outputs[Merge Join Output].Columns[errormsgid]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_ErrorMessage\Conditional Split.Outputs[NewRow]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="NewRow"
                  synchronousInputId="Package\Insert &amp; Update - lk_ErrorMessage\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Outputs[Merge Join Output].Columns[errormsgid]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(errormsgid)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Insert &amp; Update - lk_ErrorMessage\Conditional Split.Outputs[ExistingRow]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="ExistingRow"
                  synchronousInputId="Package\Insert &amp; Update - lk_ErrorMessage\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">![ISNULL](#{Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Outputs[Merge Join Output].Columns[errormsgid]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">!ISNULL(errormsgid)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Insert &amp; Update - lk_ErrorMessage\Conditional Split.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Insert &amp; Update - lk_ErrorMessage\Conditional Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Insert &amp; Update - lk_ErrorMessage\Conditional Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Insert &amp; Update - lk_ErrorMessage\Conditional Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_ErrorMessage\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Insert &amp; Update - lk_ErrorMessage\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Data Conversion.Inputs[Data Conversion Input].Columns[ErrorMsgID]"
                      cachedDataType="i4"
                      cachedName="ErrorMsgID"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Output].Columns[ErrorMsgID]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Data Conversion.Inputs[Data Conversion Input].Columns[ErrorParam]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ErrorParam"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Output].Columns[ErrorParam]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Data Conversion.Inputs[Data Conversion Input].Columns[ErrorMsg]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ErrorMsg"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Output].Columns[ErrorMsg]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_ErrorMessage\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Insert &amp; Update - lk_ErrorMessage\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Data Conversion.Outputs[Data Conversion Output].Columns[ErrorMsgID_out]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Data Conversion.Outputs[Data Conversion Output].Columns[ErrorMsgID_out]"
                      name="ErrorMsgID_out"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Output].Columns[ErrorMsgID]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Data Conversion.Outputs[Data Conversion Output].Columns[ErrorParam_out]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Data Conversion.Outputs[Data Conversion Output].Columns[ErrorParam_out]"
                      name="ErrorParam_out"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Output].Columns[ErrorParam]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Data Conversion.Outputs[Data Conversion Output].Columns[ErrorMsg_out]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Data Conversion.Outputs[Data Conversion Output].Columns[ErrorMsg_out]"
                      name="ErrorMsg_out"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Output].Columns[ErrorMsg]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Insert &amp; Update - lk_ErrorMessage\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Insert &amp; Update - lk_ErrorMessage\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_ErrorMessage\DB Sort"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="DB Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Insert &amp; Update - lk_ErrorMessage\DB Sort.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\DB Sort.Inputs[Sort Input].Columns[ErrorMsgID]"
                      cachedDataType="i4"
                      cachedName="ErrorMsgID"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Output].Columns[ErrorMsgID]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\DB Sort.Inputs[Sort Input].Columns[ErrorParam]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ErrorParam"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Output].Columns[ErrorParam]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\DB Sort.Inputs[Sort Input].Columns[ErrorMsg]"
                      cachedDataType="wstr"
                      cachedLength="1000"
                      cachedName="ErrorMsg"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Output].Columns[ErrorMsg]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_ErrorMessage\DB Sort.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\DB Sort.Outputs[Sort Output].Columns[ErrorMsgID]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\DB Sort.Outputs[Sort Output].Columns[ErrorMsgID]"
                      name="ErrorMsgID"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Output].Columns[ErrorMsgID]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\DB Sort.Outputs[Sort Output].Columns[ErrorParam]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\DB Sort.Outputs[Sort Output].Columns[ErrorParam]"
                      name="ErrorParam">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Output].Columns[ErrorParam]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\DB Sort.Outputs[Sort Output].Columns[ErrorMsg]"
                      dataType="wstr"
                      length="1000"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\DB Sort.Outputs[Sort Output].Columns[ErrorMsg]"
                      name="ErrorMsg">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Output].Columns[ErrorMsg]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Sort"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Excel Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Sort.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Sort.Inputs[Sort Input].Columns[ErrorMsgID_out]"
                      cachedDataType="i4"
                      cachedName="ErrorMsgID_out"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Data Conversion.Outputs[Data Conversion Output].Columns[ErrorMsgID_out]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Sort.Inputs[Sort Input].Columns[ErrorParam_out]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ErrorParam_out"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Data Conversion.Outputs[Data Conversion Output].Columns[ErrorParam_out]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Sort.Inputs[Sort Input].Columns[ErrorMsg_out]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ErrorMsg_out"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Data Conversion.Outputs[Data Conversion Output].Columns[ErrorMsg_out]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Sort.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Sort.Outputs[Sort Output].Columns[ErrorMsgID_out]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Sort.Outputs[Sort Output].Columns[ErrorMsgID_out]"
                      name="ErrorMsgID_out"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Insert &amp; Update - lk_ErrorMessage\Data Conversion.Outputs[Data Conversion Output].Columns[ErrorMsgID_out]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Sort.Outputs[Sort Output].Columns[ErrorParam_out]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Sort.Outputs[Sort Output].Columns[ErrorParam_out]"
                      name="ErrorParam_out">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Insert &amp; Update - lk_ErrorMessage\Data Conversion.Outputs[Data Conversion Output].Columns[ErrorParam_out]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Sort.Outputs[Sort Output].Columns[ErrorMsg_out]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Sort.Outputs[Sort Output].Columns[ErrorMsg_out]"
                      name="ErrorMsg_out">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Insert &amp; Update - lk_ErrorMessage\Data Conversion.Outputs[Data Conversion Output].Columns[ErrorMsg_out]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">lk_ErrorMsg$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Output].Columns[ErrorMsgID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Output].ExternalColumns[ErrorMsgID]"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Output].Columns[ErrorMsgID]"
                      name="ErrorMsgID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Output].Columns[ErrorParam]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Output].ExternalColumns[ErrorParam]"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Output].Columns[ErrorParam]"
                      name="ErrorParam"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Output].Columns[ErrorMsg]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Output].ExternalColumns[ErrorMsg]"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Output].Columns[ErrorMsg]"
                      name="ErrorMsg"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Output].ExternalColumns[ErrorMsgID]"
                      dataType="r8"
                      name="ErrorMsgID" />
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Output].ExternalColumns[ErrorParam]"
                      dataType="wstr"
                      length="255"
                      name="ErrorParam" />
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Output].ExternalColumns[ErrorMsg]"
                      dataType="wstr"
                      length="255"
                      name="ErrorMsg" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorMsgID]"
                      dataType="r8"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorMsgID]"
                      name="ErrorMsgID" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorParam]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorParam]"
                      name="ErrorParam" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorMsg]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorMsg]"
                      name="ErrorMsg" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_ErrorMessage\Insert New row into DB"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert New row into DB"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[lk_ErrorMsg]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Insert &amp; Update - lk_ErrorMessage\Insert New row into DB.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DBConnection]"
                  connectionManagerRefId="Package.ConnectionManagers[DBConnection]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Insert &amp; Update - lk_ErrorMessage\Insert New row into DB.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Insert New row into DB.Inputs[OLE DB Destination Input].Columns[ErrorParam]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ErrorParam"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_ErrorMessage\Insert New row into DB.Inputs[OLE DB Destination Input].ExternalColumns[ErrorParam]"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Outputs[Merge Join Output].Columns[ErrorParam]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Insert New row into DB.Inputs[OLE DB Destination Input].Columns[ErrorMsg]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ErrorMsg"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_ErrorMessage\Insert New row into DB.Inputs[OLE DB Destination Input].ExternalColumns[ErrorMsg]"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Outputs[Merge Join Output].Columns[ErrorMsg]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Insert New row into DB.Inputs[OLE DB Destination Input].Columns[ErrorMsgID]"
                      cachedDataType="i4"
                      cachedName="ErrorMsgID"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_ErrorMessage\Insert New row into DB.Inputs[OLE DB Destination Input].ExternalColumns[ErrorMsgID]"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Outputs[Merge Join Output].Columns[ErrorMsgID]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Insert New row into DB.Inputs[OLE DB Destination Input].ExternalColumns[ErrorMsgID]"
                      dataType="i4"
                      name="ErrorMsgID" />
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Insert New row into DB.Inputs[OLE DB Destination Input].ExternalColumns[ErrorParam]"
                      dataType="wstr"
                      length="255"
                      name="ErrorParam" />
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Insert New row into DB.Inputs[OLE DB Destination Input].ExternalColumns[ErrorMsg]"
                      dataType="wstr"
                      length="1000"
                      name="ErrorMsg" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_ErrorMessage\Insert New row into DB.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Insert &amp; Update - lk_ErrorMessage\Insert New row into DB.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Insert New row into DB.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Insert New row into DB.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Insert New row into DB.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Insert New row into DB.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_ErrorMessage\Merge Join"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Merge Join"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">1</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Inputs[Merge Join Left Input].Columns[ErrorMsgID_out]"
                      cachedDataType="i4"
                      cachedName="ErrorMsgID_out"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Sort.Outputs[Sort Output].Columns[ErrorMsgID_out]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Inputs[Merge Join Left Input].Columns[ErrorParam_out]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ErrorParam_out"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Sort.Outputs[Sort Output].Columns[ErrorParam_out]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Inputs[Merge Join Left Input].Columns[ErrorMsg_out]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ErrorMsg_out"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Sort.Outputs[Sort Output].Columns[ErrorMsg_out]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Inputs[Merge Join Right Input].Columns[ErrorMsgID]"
                      cachedDataType="i4"
                      cachedName="ErrorMsgID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\DB Sort.Outputs[Sort Output].Columns[ErrorMsgID]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Outputs[Merge Join Output]"
                  isSorted="true"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Outputs[Merge Join Output].Columns[errormsgid]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Outputs[Merge Join Output].Columns[errormsgid]"
                      name="errormsgid">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Inputs[Merge Join Right Input].Columns[ErrorMsgID]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Outputs[Merge Join Output].Columns[ErrorMsgID]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Outputs[Merge Join Output].Columns[ErrorMsgID]"
                      name="ErrorMsgID"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Inputs[Merge Join Left Input].Columns[ErrorMsgID_out]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Outputs[Merge Join Output].Columns[ErrorParam]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Outputs[Merge Join Output].Columns[ErrorParam]"
                      name="ErrorParam">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Inputs[Merge Join Left Input].Columns[ErrorParam_out]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Outputs[Merge Join Output].Columns[ErrorMsg]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Outputs[Merge Join Output].Columns[ErrorMsg]"
                      name="ErrorMsg">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Inputs[Merge Join Left Input].Columns[ErrorMsg_out]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="OLE DB Source"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[lk_ErrorMsg]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DBConnection]"
                  connectionManagerRefId="Package.ConnectionManagers[DBConnection]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Output].Columns[ErrorMsgID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ErrorMsgID]"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Output].Columns[ErrorMsgID]"
                      name="ErrorMsgID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Output].Columns[ErrorParam]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ErrorParam]"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Output].Columns[ErrorParam]"
                      name="ErrorParam"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Output].Columns[ErrorMsg]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ErrorMsg]"
                      length="1000"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Output].Columns[ErrorMsg]"
                      name="ErrorMsg"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ErrorMsgID]"
                      dataType="i4"
                      name="ErrorMsgID" />
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ErrorParam]"
                      dataType="wstr"
                      length="255"
                      name="ErrorParam" />
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ErrorMsg]"
                      dataType="wstr"
                      length="1000"
                      name="ErrorMsg" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorMsgID]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorMsgID]"
                      name="ErrorMsgID" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorParam]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorParam]"
                      name="ErrorParam" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorMsg]"
                      dataType="wstr"
                      length="1000"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorMsg]"
                      name="ErrorMsg" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_ErrorMessage\Update Existing row in DB"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Update Existing row in DB"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">update dbo.lk_ErrorMsg set ErrorParam = ?, ErrorMsg = ? where ErrorMsgID = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Insert &amp; Update - lk_ErrorMessage\Update Existing row in DB.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DBConnection]"
                  connectionManagerRefId="Package.ConnectionManagers[DBConnection]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Insert &amp; Update - lk_ErrorMessage\Update Existing row in DB.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Update Existing row in DB.Inputs[OLE DB Command Input].Columns[ErrorParam]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ErrorParam"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_ErrorMessage\Update Existing row in DB.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Outputs[Merge Join Output].Columns[ErrorParam]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Update Existing row in DB.Inputs[OLE DB Command Input].Columns[ErrorMsg]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ErrorMsg"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_ErrorMessage\Update Existing row in DB.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Outputs[Merge Join Output].Columns[ErrorMsg]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Update Existing row in DB.Inputs[OLE DB Command Input].Columns[ErrorMsgID]"
                      cachedDataType="i4"
                      cachedName="ErrorMsgID"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_ErrorMessage\Update Existing row in DB.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Outputs[Merge Join Output].Columns[ErrorMsgID]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Update Existing row in DB.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="wstr"
                      length="255"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Update Existing row in DB.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      dataType="wstr"
                      length="1000"
                      name="Param_1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Update Existing row in DB.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      dataType="i4"
                      name="Param_2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_ErrorMessage\Update Existing row in DB.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Insert &amp; Update - lk_ErrorMessage\Update Existing row in DB.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Insert &amp; Update - lk_ErrorMessage\Update Existing row in DB.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Insert &amp; Update - lk_ErrorMessage\Update Existing row in DB.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Update Existing row in DB.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Update Existing row in DB.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ErrorMessage\Update Existing row in DB.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ErrorMessage\Update Existing row in DB.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Insert &amp; Update - lk_ErrorMessage.Paths[Data Conversion Output]"
              endId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Sort.Inputs[Sort Input]"
              name="Data Conversion Output"
              startId="Package\Insert &amp; Update - lk_ErrorMessage\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Insert &amp; Update - lk_ErrorMessage.Paths[Excel Source Output]"
              endId="Package\Insert &amp; Update - lk_ErrorMessage\Data Conversion.Inputs[Data Conversion Input]"
              name="Excel Source Output"
              startId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\Insert &amp; Update - lk_ErrorMessage.Paths[ExistingRow]"
              endId="Package\Insert &amp; Update - lk_ErrorMessage\Update Existing row in DB.Inputs[OLE DB Command Input]"
              name="ExistingRow"
              startId="Package\Insert &amp; Update - lk_ErrorMessage\Conditional Split.Outputs[ExistingRow]" />
            <path
              refId="Package\Insert &amp; Update - lk_ErrorMessage.Paths[Merge Join Output]"
              endId="Package\Insert &amp; Update - lk_ErrorMessage\Conditional Split.Inputs[Conditional Split Input]"
              name="Merge Join Output"
              startId="Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Outputs[Merge Join Output]" />
            <path
              refId="Package\Insert &amp; Update - lk_ErrorMessage.Paths[NewRow]"
              endId="Package\Insert &amp; Update - lk_ErrorMessage\Insert New row into DB.Inputs[OLE DB Destination Input]"
              name="NewRow"
              startId="Package\Insert &amp; Update - lk_ErrorMessage\Conditional Split.Outputs[NewRow]" />
            <path
              refId="Package\Insert &amp; Update - lk_ErrorMessage.Paths[OLE DB Source Output]"
              endId="Package\Insert &amp; Update - lk_ErrorMessage\DB Sort.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Insert &amp; Update - lk_ErrorMessage.Paths[Sort Output]"
              endId="Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Insert &amp; Update - lk_ErrorMessage\Excel Sort.Outputs[Sort Output]" />
            <path
              refId="Package\Insert &amp; Update - lk_ErrorMessage.Paths[Sort Output1]"
              endId="Package\Insert &amp; Update - lk_ErrorMessage\Merge Join.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Insert &amp; Update - lk_ErrorMessage\DB Sort.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Insert &amp; Update - lk_ImportStatus"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{420ca239-6a28-447e-a583-5e8ce22e11a9}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Insert &amp; Update - lk_ImportStatus"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Insert &amp; Update - lk_ImportStatus\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Insert &amp; Update - lk_ImportStatus\Conditional Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Conditional Split.Inputs[Conditional Split Input].Columns[importstatusid]"
                      cachedDataType="i4"
                      cachedName="importstatusid"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Outputs[Merge Join Output].Columns[importstatusid]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_ImportStatus\Conditional Split.Outputs[NewRow]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="NewRow"
                  synchronousInputId="Package\Insert &amp; Update - lk_ImportStatus\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Outputs[Merge Join Output].Columns[importstatusid]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(importstatusid)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Insert &amp; Update - lk_ImportStatus\Conditional Split.Outputs[ExistingRow]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="ExistingRow"
                  synchronousInputId="Package\Insert &amp; Update - lk_ImportStatus\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">![ISNULL](#{Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Outputs[Merge Join Output].Columns[importstatusid]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">!ISNULL(importstatusid)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Insert &amp; Update - lk_ImportStatus\Conditional Split.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Insert &amp; Update - lk_ImportStatus\Conditional Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Insert &amp; Update - lk_ImportStatus\Conditional Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Insert &amp; Update - lk_ImportStatus\Conditional Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_ImportStatus\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Insert &amp; Update - lk_ImportStatus\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Data Conversion.Inputs[Data Conversion Input].Columns[ImportStatusID]"
                      cachedDataType="r8"
                      cachedName="ImportStatusID"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Output].Columns[ImportStatusID]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Data Conversion.Inputs[Data Conversion Input].Columns[ImportStatusName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ImportStatusName"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Output].Columns[ImportStatusName]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Data Conversion.Inputs[Data Conversion Input].Columns[ImportStatusDescription]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ImportStatusDescription"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Output].Columns[ImportStatusDescription]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_ImportStatus\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Insert &amp; Update - lk_ImportStatus\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Data Conversion.Outputs[Data Conversion Output].Columns[ImportStatusID_out]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Data Conversion.Outputs[Data Conversion Output].Columns[ImportStatusID_out]"
                      name="ImportStatusID_out"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Output].Columns[ImportStatusID]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Data Conversion.Outputs[Data Conversion Output].Columns[ImportStatusName_out]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Data Conversion.Outputs[Data Conversion Output].Columns[ImportStatusName_out]"
                      name="ImportStatusName_out"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Output].Columns[ImportStatusName]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Data Conversion.Outputs[Data Conversion Output].Columns[ImportStatusDescription_out]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Data Conversion.Outputs[Data Conversion Output].Columns[ImportStatusDescription_out]"
                      name="ImportStatusDescription_out"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Output].Columns[ImportStatusDescription]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Insert &amp; Update - lk_ImportStatus\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Insert &amp; Update - lk_ImportStatus\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_ImportStatus\DB Sort"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="DB Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Insert &amp; Update - lk_ImportStatus\DB Sort.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\DB Sort.Inputs[Sort Input].Columns[ImportStatusID]"
                      cachedDataType="i4"
                      cachedName="ImportStatusID"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source.Outputs[OLE DB Source Output].Columns[ImportStatusID]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_ImportStatus\DB Sort.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\DB Sort.Outputs[Sort Output].Columns[ImportStatusID]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\DB Sort.Outputs[Sort Output].Columns[ImportStatusID]"
                      name="ImportStatusID"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source.Outputs[OLE DB Source Output].Columns[ImportStatusID]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_ImportStatus\Excel Sort"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Excel Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Insert &amp; Update - lk_ImportStatus\Excel Sort.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Excel Sort.Inputs[Sort Input].Columns[ImportStatusID_out]"
                      cachedDataType="i4"
                      cachedName="ImportStatusID_out"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Data Conversion.Outputs[Data Conversion Output].Columns[ImportStatusID_out]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Excel Sort.Inputs[Sort Input].Columns[ImportStatusName_out]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ImportStatusName_out"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Data Conversion.Outputs[Data Conversion Output].Columns[ImportStatusName_out]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Excel Sort.Inputs[Sort Input].Columns[ImportStatusDescription_out]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ImportStatusDescription_out"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Data Conversion.Outputs[Data Conversion Output].Columns[ImportStatusDescription_out]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_ImportStatus\Excel Sort.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Excel Sort.Outputs[Sort Output].Columns[ImportStatusID_out]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Excel Sort.Outputs[Sort Output].Columns[ImportStatusID_out]"
                      name="ImportStatusID_out"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Insert &amp; Update - lk_ImportStatus\Data Conversion.Outputs[Data Conversion Output].Columns[ImportStatusID_out]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Excel Sort.Outputs[Sort Output].Columns[ImportStatusName_out]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Excel Sort.Outputs[Sort Output].Columns[ImportStatusName_out]"
                      name="ImportStatusName_out">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Insert &amp; Update - lk_ImportStatus\Data Conversion.Outputs[Data Conversion Output].Columns[ImportStatusName_out]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Excel Sort.Outputs[Sort Output].Columns[ImportStatusDescription_out]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Excel Sort.Outputs[Sort Output].Columns[ImportStatusDescription_out]"
                      name="ImportStatusDescription_out">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Insert &amp; Update - lk_ImportStatus\Data Conversion.Outputs[Data Conversion Output].Columns[ImportStatusDescription_out]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_ImportStatus\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">lk_ImportStatus$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Output].Columns[ImportStatusID]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Output].ExternalColumns[ImportStatusID]"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Output].Columns[ImportStatusID]"
                      name="ImportStatusID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Output].Columns[ImportStatusName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Output].ExternalColumns[ImportStatusName]"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Output].Columns[ImportStatusName]"
                      name="ImportStatusName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Output].Columns[ImportStatusDescription]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Output].ExternalColumns[ImportStatusDescription]"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Output].Columns[ImportStatusDescription]"
                      name="ImportStatusDescription"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Output].ExternalColumns[ImportStatusID]"
                      dataType="r8"
                      name="ImportStatusID" />
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Output].ExternalColumns[ImportStatusName]"
                      dataType="wstr"
                      length="255"
                      name="ImportStatusName" />
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Output].ExternalColumns[ImportStatusDescription]"
                      dataType="wstr"
                      length="255"
                      name="ImportStatusDescription" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Error Output].Columns[ImportStatusID]"
                      dataType="r8"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Error Output].Columns[ImportStatusID]"
                      name="ImportStatusID" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Error Output].Columns[ImportStatusName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Error Output].Columns[ImportStatusName]"
                      name="ImportStatusName" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Error Output].Columns[ImportStatusDescription]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Error Output].Columns[ImportStatusDescription]"
                      name="ImportStatusDescription" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_ImportStatus\Insert New row into DB"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert New row into DB"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[lk_ImportStatus]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Insert &amp; Update - lk_ImportStatus\Insert New row into DB.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DBConnection]"
                  connectionManagerRefId="Package.ConnectionManagers[DBConnection]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Insert &amp; Update - lk_ImportStatus\Insert New row into DB.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Insert New row into DB.Inputs[OLE DB Destination Input].Columns[ImportStatusName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ImportStatusName"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_ImportStatus\Insert New row into DB.Inputs[OLE DB Destination Input].ExternalColumns[ImportStatusName]"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Outputs[Merge Join Output].Columns[ImportStatusName]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Insert New row into DB.Inputs[OLE DB Destination Input].Columns[ImportStatusDescription]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ImportStatusDescription"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_ImportStatus\Insert New row into DB.Inputs[OLE DB Destination Input].ExternalColumns[ImportStatusDescription]"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Outputs[Merge Join Output].Columns[ImportStatusDescription]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Insert New row into DB.Inputs[OLE DB Destination Input].Columns[ImportStatusID]"
                      cachedDataType="i4"
                      cachedName="ImportStatusID"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_ImportStatus\Insert New row into DB.Inputs[OLE DB Destination Input].ExternalColumns[ImportStatusID]"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Outputs[Merge Join Output].Columns[ImportStatusID]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Insert New row into DB.Inputs[OLE DB Destination Input].ExternalColumns[ImportStatusID]"
                      dataType="i4"
                      name="ImportStatusID" />
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Insert New row into DB.Inputs[OLE DB Destination Input].ExternalColumns[ImportStatusName]"
                      dataType="wstr"
                      length="255"
                      name="ImportStatusName" />
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Insert New row into DB.Inputs[OLE DB Destination Input].ExternalColumns[ImportStatusDescription]"
                      dataType="wstr"
                      length="255"
                      name="ImportStatusDescription" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_ImportStatus\Insert New row into DB.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Insert &amp; Update - lk_ImportStatus\Insert New row into DB.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Insert New row into DB.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Insert New row into DB.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Insert New row into DB.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Insert New row into DB.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_ImportStatus\Merge Join"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Merge Join"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">1</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Inputs[Merge Join Left Input].Columns[ImportStatusID_out]"
                      cachedDataType="i4"
                      cachedName="ImportStatusID_out"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Excel Sort.Outputs[Sort Output].Columns[ImportStatusID_out]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Inputs[Merge Join Left Input].Columns[ImportStatusName_out]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ImportStatusName_out"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Excel Sort.Outputs[Sort Output].Columns[ImportStatusName_out]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Inputs[Merge Join Left Input].Columns[ImportStatusDescription_out]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ImportStatusDescription_out"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Excel Sort.Outputs[Sort Output].Columns[ImportStatusDescription_out]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Inputs[Merge Join Right Input].Columns[ImportStatusID]"
                      cachedDataType="i4"
                      cachedName="ImportStatusID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\DB Sort.Outputs[Sort Output].Columns[ImportStatusID]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Outputs[Merge Join Output]"
                  isSorted="true"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Outputs[Merge Join Output].Columns[ImportStatusID]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Outputs[Merge Join Output].Columns[ImportStatusID]"
                      name="ImportStatusID"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Inputs[Merge Join Left Input].Columns[ImportStatusID_out]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Outputs[Merge Join Output].Columns[ImportStatusName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Outputs[Merge Join Output].Columns[ImportStatusName]"
                      name="ImportStatusName">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Inputs[Merge Join Left Input].Columns[ImportStatusName_out]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Outputs[Merge Join Output].Columns[ImportStatusDescription]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Outputs[Merge Join Output].Columns[ImportStatusDescription]"
                      name="ImportStatusDescription">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Inputs[Merge Join Left Input].Columns[ImportStatusDescription_out]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Outputs[Merge Join Output].Columns[importstatusid]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Outputs[Merge Join Output].Columns[importstatusid]"
                      name="importstatusid">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Inputs[Merge Join Right Input].Columns[ImportStatusID]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="OLE DB Source"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[lk_ImportStatus]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DBConnection]"
                  connectionManagerRefId="Package.ConnectionManagers[DBConnection]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source.Outputs[OLE DB Source Output].Columns[ImportStatusID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ImportStatusID]"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source.Outputs[OLE DB Source Output].Columns[ImportStatusID]"
                      name="ImportStatusID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source.Outputs[OLE DB Source Output].Columns[ImportStatusName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ImportStatusName]"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source.Outputs[OLE DB Source Output].Columns[ImportStatusName]"
                      name="ImportStatusName"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source.Outputs[OLE DB Source Output].Columns[ImportStatusDescription]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ImportStatusDescription]"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source.Outputs[OLE DB Source Output].Columns[ImportStatusDescription]"
                      name="ImportStatusDescription"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ImportStatusID]"
                      dataType="i4"
                      name="ImportStatusID" />
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ImportStatusName]"
                      dataType="wstr"
                      length="255"
                      name="ImportStatusName" />
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[ImportStatusDescription]"
                      dataType="wstr"
                      length="255"
                      name="ImportStatusDescription" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ImportStatusID]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ImportStatusID]"
                      name="ImportStatusID" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ImportStatusName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ImportStatusName]"
                      name="ImportStatusName" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ImportStatusDescription]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ImportStatusDescription]"
                      name="ImportStatusDescription" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_ImportStatus\Update Existing row in DB"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Update Existing row in DB"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">update dbo.lk_ImportStatus 
set ImportStatusName = ?, ImportStatusDescription = ? 
where ImportStatusID = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Insert &amp; Update - lk_ImportStatus\Update Existing row in DB.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DBConnection]"
                  connectionManagerRefId="Package.ConnectionManagers[DBConnection]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Insert &amp; Update - lk_ImportStatus\Update Existing row in DB.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Update Existing row in DB.Inputs[OLE DB Command Input].Columns[ImportStatusName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ImportStatusName"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_ImportStatus\Update Existing row in DB.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Outputs[Merge Join Output].Columns[ImportStatusName]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Update Existing row in DB.Inputs[OLE DB Command Input].Columns[ImportStatusDescription]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="ImportStatusDescription"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_ImportStatus\Update Existing row in DB.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Outputs[Merge Join Output].Columns[ImportStatusDescription]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Update Existing row in DB.Inputs[OLE DB Command Input].Columns[ImportStatusID]"
                      cachedDataType="i4"
                      cachedName="ImportStatusID"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_ImportStatus\Update Existing row in DB.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Outputs[Merge Join Output].Columns[ImportStatusID]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Update Existing row in DB.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="wstr"
                      length="255"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Update Existing row in DB.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      dataType="wstr"
                      length="255"
                      name="Param_1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Update Existing row in DB.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      dataType="i4"
                      name="Param_2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_ImportStatus\Update Existing row in DB.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Insert &amp; Update - lk_ImportStatus\Update Existing row in DB.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Insert &amp; Update - lk_ImportStatus\Update Existing row in DB.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Insert &amp; Update - lk_ImportStatus\Update Existing row in DB.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Update Existing row in DB.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Update Existing row in DB.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_ImportStatus\Update Existing row in DB.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_ImportStatus\Update Existing row in DB.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Insert &amp; Update - lk_ImportStatus.Paths[Data Conversion Output]"
              endId="Package\Insert &amp; Update - lk_ImportStatus\Excel Sort.Inputs[Sort Input]"
              name="Data Conversion Output"
              startId="Package\Insert &amp; Update - lk_ImportStatus\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Insert &amp; Update - lk_ImportStatus.Paths[Excel Source Output]"
              endId="Package\Insert &amp; Update - lk_ImportStatus\Data Conversion.Inputs[Data Conversion Input]"
              name="Excel Source Output"
              startId="Package\Insert &amp; Update - lk_ImportStatus\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\Insert &amp; Update - lk_ImportStatus.Paths[ExistingRow]"
              endId="Package\Insert &amp; Update - lk_ImportStatus\Update Existing row in DB.Inputs[OLE DB Command Input]"
              name="ExistingRow"
              startId="Package\Insert &amp; Update - lk_ImportStatus\Conditional Split.Outputs[ExistingRow]" />
            <path
              refId="Package\Insert &amp; Update - lk_ImportStatus.Paths[Merge Join Output]"
              endId="Package\Insert &amp; Update - lk_ImportStatus\Conditional Split.Inputs[Conditional Split Input]"
              name="Merge Join Output"
              startId="Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Outputs[Merge Join Output]" />
            <path
              refId="Package\Insert &amp; Update - lk_ImportStatus.Paths[NewRow]"
              endId="Package\Insert &amp; Update - lk_ImportStatus\Insert New row into DB.Inputs[OLE DB Destination Input]"
              name="NewRow"
              startId="Package\Insert &amp; Update - lk_ImportStatus\Conditional Split.Outputs[NewRow]" />
            <path
              refId="Package\Insert &amp; Update - lk_ImportStatus.Paths[OLE DB Source Output]"
              endId="Package\Insert &amp; Update - lk_ImportStatus\DB Sort.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Insert &amp; Update - lk_ImportStatus.Paths[Sort Output]"
              endId="Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Insert &amp; Update - lk_ImportStatus\Excel Sort.Outputs[Sort Output]" />
            <path
              refId="Package\Insert &amp; Update - lk_ImportStatus.Paths[Sort Output1]"
              endId="Package\Insert &amp; Update - lk_ImportStatus\Merge Join.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Insert &amp; Update - lk_ImportStatus\DB Sort.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Insert &amp; Update - lk_SecurityType"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{44a5dafc-17ea-4a6b-9544-fdf6a777a13d}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Insert &amp; Update - lk_SecurityType"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Insert &amp; Update - lk_SecurityType\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Insert &amp; Update - lk_SecurityType\Conditional Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Conditional Split.Inputs[Conditional Split Input].Columns[securitytypeid]"
                      cachedDataType="i4"
                      cachedName="securitytypeid"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Merge Join.Outputs[Merge Join Output].Columns[securitytypeid]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_SecurityType\Conditional Split.Outputs[NewRow]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="NewRow"
                  synchronousInputId="Package\Insert &amp; Update - lk_SecurityType\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\Insert &amp; Update - lk_SecurityType\Merge Join.Outputs[Merge Join Output].Columns[securitytypeid]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(securitytypeid)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Insert &amp; Update - lk_SecurityType\Conditional Split.Outputs[ExistingRow]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="ExistingRow"
                  synchronousInputId="Package\Insert &amp; Update - lk_SecurityType\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">![ISNULL](#{Package\Insert &amp; Update - lk_SecurityType\Merge Join.Outputs[Merge Join Output].Columns[securitytypeid]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">!ISNULL(securitytypeid)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Insert &amp; Update - lk_SecurityType\Conditional Split.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Insert &amp; Update - lk_SecurityType\Conditional Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Insert &amp; Update - lk_SecurityType\Conditional Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Insert &amp; Update - lk_SecurityType\Conditional Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_SecurityType\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Insert &amp; Update - lk_SecurityType\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Data Conversion.Inputs[Data Conversion Input].Columns[SecurityTypeID]"
                      cachedDataType="r8"
                      cachedName="SecurityTypeID"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Output].Columns[SecurityTypeID]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Data Conversion.Inputs[Data Conversion Input].Columns[SecurityTypeCode]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="SecurityTypeCode"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Output].Columns[SecurityTypeCode]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Data Conversion.Inputs[Data Conversion Input].Columns[SecurityTypeName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="SecurityTypeName"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Output].Columns[SecurityTypeName]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_SecurityType\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Insert &amp; Update - lk_SecurityType\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Data Conversion.Outputs[Data Conversion Output].Columns[SecurityTypeID_out]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Data Conversion.Outputs[Data Conversion Output].Columns[SecurityTypeID_out]"
                      name="SecurityTypeID_out"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Output].Columns[SecurityTypeID]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Data Conversion.Outputs[Data Conversion Output].Columns[SecurityTypeCode_out]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Data Conversion.Outputs[Data Conversion Output].Columns[SecurityTypeCode_out]"
                      name="SecurityTypeCode_out"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Output].Columns[SecurityTypeCode]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Data Conversion.Outputs[Data Conversion Output].Columns[SecurityTypeName_out]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Data Conversion.Outputs[Data Conversion Output].Columns[SecurityTypeName_out]"
                      name="SecurityTypeName_out"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Output].Columns[SecurityTypeName]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Insert &amp; Update - lk_SecurityType\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Insert &amp; Update - lk_SecurityType\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_SecurityType\DB Sort"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="DB Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Insert &amp; Update - lk_SecurityType\DB Sort.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\DB Sort.Inputs[Sort Input].Columns[SecurityTypeID]"
                      cachedDataType="i4"
                      cachedName="SecurityTypeID"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\OLE DB Source.Outputs[OLE DB Source Output].Columns[SecurityTypeID]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_SecurityType\DB Sort.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\DB Sort.Outputs[Sort Output].Columns[SecurityTypeID]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\DB Sort.Outputs[Sort Output].Columns[SecurityTypeID]"
                      name="SecurityTypeID"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Insert &amp; Update - lk_SecurityType\OLE DB Source.Outputs[OLE DB Source Output].Columns[SecurityTypeID]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_SecurityType\Excel Sort"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Excel Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Insert &amp; Update - lk_SecurityType\Excel Sort.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Excel Sort.Inputs[Sort Input].Columns[SecurityTypeID_out]"
                      cachedDataType="i4"
                      cachedName="SecurityTypeID_out"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Data Conversion.Outputs[Data Conversion Output].Columns[SecurityTypeID_out]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Excel Sort.Inputs[Sort Input].Columns[SecurityTypeCode_out]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="SecurityTypeCode_out"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Data Conversion.Outputs[Data Conversion Output].Columns[SecurityTypeCode_out]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Excel Sort.Inputs[Sort Input].Columns[SecurityTypeName_out]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="SecurityTypeName_out"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Data Conversion.Outputs[Data Conversion Output].Columns[SecurityTypeName_out]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_SecurityType\Excel Sort.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Excel Sort.Outputs[Sort Output].Columns[SecurityTypeID_out]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Excel Sort.Outputs[Sort Output].Columns[SecurityTypeID_out]"
                      name="SecurityTypeID_out"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Insert &amp; Update - lk_SecurityType\Data Conversion.Outputs[Data Conversion Output].Columns[SecurityTypeID_out]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Excel Sort.Outputs[Sort Output].Columns[SecurityTypeCode_out]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Excel Sort.Outputs[Sort Output].Columns[SecurityTypeCode_out]"
                      name="SecurityTypeCode_out">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Insert &amp; Update - lk_SecurityType\Data Conversion.Outputs[Data Conversion Output].Columns[SecurityTypeCode_out]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Excel Sort.Outputs[Sort Output].Columns[SecurityTypeName_out]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Excel Sort.Outputs[Sort Output].Columns[SecurityTypeName_out]"
                      name="SecurityTypeName_out">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Insert &amp; Update - lk_SecurityType\Data Conversion.Outputs[Data Conversion Output].Columns[SecurityTypeName_out]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_SecurityType\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">lk_SecurityType$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Insert &amp; Update - lk_SecurityType\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Output].Columns[SecurityTypeID]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Output].ExternalColumns[SecurityTypeID]"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Output].Columns[SecurityTypeID]"
                      name="SecurityTypeID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Output].Columns[SecurityTypeCode]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Output].ExternalColumns[SecurityTypeCode]"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Output].Columns[SecurityTypeCode]"
                      name="SecurityTypeCode"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Output].Columns[SecurityTypeName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Output].ExternalColumns[SecurityTypeName]"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Output].Columns[SecurityTypeName]"
                      name="SecurityTypeName"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Output].ExternalColumns[SecurityTypeID]"
                      dataType="r8"
                      name="SecurityTypeID" />
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Output].ExternalColumns[SecurityTypeCode]"
                      dataType="wstr"
                      length="255"
                      name="SecurityTypeCode" />
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Output].ExternalColumns[SecurityTypeName]"
                      dataType="wstr"
                      length="255"
                      name="SecurityTypeName" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Error Output].Columns[SecurityTypeName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Error Output].Columns[SecurityTypeName]"
                      name="SecurityTypeName" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Error Output].Columns[SecurityTypeID]"
                      dataType="r8"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Error Output].Columns[SecurityTypeID]"
                      name="SecurityTypeID" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Error Output].Columns[SecurityTypeCode]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Error Output].Columns[SecurityTypeCode]"
                      name="SecurityTypeCode" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_SecurityType\Insert New row into DB"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert New row into DB"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[lk_SecurityType]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Insert &amp; Update - lk_SecurityType\Insert New row into DB.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DBConnection]"
                  connectionManagerRefId="Package.ConnectionManagers[DBConnection]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Insert &amp; Update - lk_SecurityType\Insert New row into DB.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Insert New row into DB.Inputs[OLE DB Destination Input].Columns[SecurityTypeCode]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="SecurityTypeCode"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_SecurityType\Insert New row into DB.Inputs[OLE DB Destination Input].ExternalColumns[SecurityTypeCode]"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Merge Join.Outputs[Merge Join Output].Columns[SecurityTypeCode]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Insert New row into DB.Inputs[OLE DB Destination Input].Columns[SecurityTypeID]"
                      cachedDataType="i4"
                      cachedName="SecurityTypeID"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_SecurityType\Insert New row into DB.Inputs[OLE DB Destination Input].ExternalColumns[SecurityTypeID]"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Merge Join.Outputs[Merge Join Output].Columns[SecurityTypeID]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Insert New row into DB.Inputs[OLE DB Destination Input].Columns[SecurityTypeName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="SecurityTypeName"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_SecurityType\Insert New row into DB.Inputs[OLE DB Destination Input].ExternalColumns[SecurityTypeName]"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Merge Join.Outputs[Merge Join Output].Columns[SecurityTypeName]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Insert New row into DB.Inputs[OLE DB Destination Input].ExternalColumns[SecurityTypeID]"
                      dataType="i4"
                      name="SecurityTypeID" />
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Insert New row into DB.Inputs[OLE DB Destination Input].ExternalColumns[SecurityTypeCode]"
                      dataType="wstr"
                      length="255"
                      name="SecurityTypeCode" />
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Insert New row into DB.Inputs[OLE DB Destination Input].ExternalColumns[SecurityTypeName]"
                      dataType="wstr"
                      length="255"
                      name="SecurityTypeName" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_SecurityType\Insert New row into DB.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Insert &amp; Update - lk_SecurityType\Insert New row into DB.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Insert New row into DB.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Insert New row into DB.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Insert New row into DB.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Insert New row into DB.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_SecurityType\Merge Join"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Merge Join"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">1</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Insert &amp; Update - lk_SecurityType\Merge Join.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Merge Join.Inputs[Merge Join Left Input].Columns[SecurityTypeID_out]"
                      cachedDataType="i4"
                      cachedName="SecurityTypeID_out"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Excel Sort.Outputs[Sort Output].Columns[SecurityTypeID_out]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Merge Join.Inputs[Merge Join Left Input].Columns[SecurityTypeCode_out]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="SecurityTypeCode_out"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Excel Sort.Outputs[Sort Output].Columns[SecurityTypeCode_out]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Merge Join.Inputs[Merge Join Left Input].Columns[SecurityTypeName_out]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="SecurityTypeName_out"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Excel Sort.Outputs[Sort Output].Columns[SecurityTypeName_out]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Insert &amp; Update - lk_SecurityType\Merge Join.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Merge Join.Inputs[Merge Join Right Input].Columns[SecurityTypeID]"
                      cachedDataType="i4"
                      cachedName="SecurityTypeID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\DB Sort.Outputs[Sort Output].Columns[SecurityTypeID]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_SecurityType\Merge Join.Outputs[Merge Join Output]"
                  isSorted="true"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Merge Join.Outputs[Merge Join Output].Columns[SecurityTypeID]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Merge Join.Outputs[Merge Join Output].Columns[SecurityTypeID]"
                      name="SecurityTypeID"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Insert &amp; Update - lk_SecurityType\Merge Join.Inputs[Merge Join Left Input].Columns[SecurityTypeID_out]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Merge Join.Outputs[Merge Join Output].Columns[SecurityTypeCode]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Merge Join.Outputs[Merge Join Output].Columns[SecurityTypeCode]"
                      name="SecurityTypeCode">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Insert &amp; Update - lk_SecurityType\Merge Join.Inputs[Merge Join Left Input].Columns[SecurityTypeCode_out]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Merge Join.Outputs[Merge Join Output].Columns[securitytypeid]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Merge Join.Outputs[Merge Join Output].Columns[securitytypeid]"
                      name="securitytypeid">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Insert &amp; Update - lk_SecurityType\Merge Join.Inputs[Merge Join Right Input].Columns[SecurityTypeID]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Merge Join.Outputs[Merge Join Output].Columns[SecurityTypeName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Merge Join.Outputs[Merge Join Output].Columns[SecurityTypeName]"
                      name="SecurityTypeName">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Insert &amp; Update - lk_SecurityType\Merge Join.Inputs[Merge Join Left Input].Columns[SecurityTypeName_out]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_SecurityType\OLE DB Source"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="OLE DB Source"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[lk_SecurityType]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Insert &amp; Update - lk_SecurityType\OLE DB Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DBConnection]"
                  connectionManagerRefId="Package.ConnectionManagers[DBConnection]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_SecurityType\OLE DB Source.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\OLE DB Source.Outputs[OLE DB Source Output].Columns[SecurityTypeID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_SecurityType\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SecurityTypeID]"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\OLE DB Source.Outputs[OLE DB Source Output].Columns[SecurityTypeID]"
                      name="SecurityTypeID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\OLE DB Source.Outputs[OLE DB Source Output].Columns[SecurityTypeCode]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_SecurityType\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SecurityTypeCode]"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\OLE DB Source.Outputs[OLE DB Source Output].Columns[SecurityTypeCode]"
                      name="SecurityTypeCode"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\OLE DB Source.Outputs[OLE DB Source Output].Columns[SecurityTypeName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_SecurityType\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SecurityTypeName]"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\OLE DB Source.Outputs[OLE DB Source Output].Columns[SecurityTypeName]"
                      name="SecurityTypeName"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SecurityTypeID]"
                      dataType="i4"
                      name="SecurityTypeID" />
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SecurityTypeCode]"
                      dataType="wstr"
                      length="255"
                      name="SecurityTypeCode" />
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[SecurityTypeName]"
                      dataType="wstr"
                      length="255"
                      name="SecurityTypeName" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Insert &amp; Update - lk_SecurityType\OLE DB Source.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SecurityTypeID]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SecurityTypeID]"
                      name="SecurityTypeID" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SecurityTypeCode]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SecurityTypeCode]"
                      name="SecurityTypeCode" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SecurityTypeName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[SecurityTypeName]"
                      name="SecurityTypeName" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_SecurityType\Update Existing row in DB"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Update Existing row in DB"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">update dbo.lk_SecurityType
set SecurityTypeCode= ?, SecurityTypeName= ? 
where SecurityTypeID= ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Insert &amp; Update - lk_SecurityType\Update Existing row in DB.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DBConnection]"
                  connectionManagerRefId="Package.ConnectionManagers[DBConnection]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Insert &amp; Update - lk_SecurityType\Update Existing row in DB.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Update Existing row in DB.Inputs[OLE DB Command Input].Columns[SecurityTypeCode]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="SecurityTypeCode"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_SecurityType\Update Existing row in DB.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Merge Join.Outputs[Merge Join Output].Columns[SecurityTypeCode]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Update Existing row in DB.Inputs[OLE DB Command Input].Columns[SecurityTypeName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="SecurityTypeName"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_SecurityType\Update Existing row in DB.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Merge Join.Outputs[Merge Join Output].Columns[SecurityTypeName]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Update Existing row in DB.Inputs[OLE DB Command Input].Columns[SecurityTypeID]"
                      cachedDataType="i4"
                      cachedName="SecurityTypeID"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_SecurityType\Update Existing row in DB.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Merge Join.Outputs[Merge Join Output].Columns[SecurityTypeID]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Update Existing row in DB.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="wstr"
                      length="255"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Update Existing row in DB.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      dataType="wstr"
                      length="255"
                      name="Param_1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Update Existing row in DB.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      dataType="i4"
                      name="Param_2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_SecurityType\Update Existing row in DB.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Insert &amp; Update - lk_SecurityType\Update Existing row in DB.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Insert &amp; Update - lk_SecurityType\Update Existing row in DB.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Insert &amp; Update - lk_SecurityType\Update Existing row in DB.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Update Existing row in DB.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Update Existing row in DB.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_SecurityType\Update Existing row in DB.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_SecurityType\Update Existing row in DB.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Insert &amp; Update - lk_SecurityType.Paths[Data Conversion Output]"
              endId="Package\Insert &amp; Update - lk_SecurityType\Excel Sort.Inputs[Sort Input]"
              name="Data Conversion Output"
              startId="Package\Insert &amp; Update - lk_SecurityType\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Insert &amp; Update - lk_SecurityType.Paths[Excel Source Output]"
              endId="Package\Insert &amp; Update - lk_SecurityType\Data Conversion.Inputs[Data Conversion Input]"
              name="Excel Source Output"
              startId="Package\Insert &amp; Update - lk_SecurityType\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\Insert &amp; Update - lk_SecurityType.Paths[ExistingRow]"
              endId="Package\Insert &amp; Update - lk_SecurityType\Update Existing row in DB.Inputs[OLE DB Command Input]"
              name="ExistingRow"
              startId="Package\Insert &amp; Update - lk_SecurityType\Conditional Split.Outputs[ExistingRow]" />
            <path
              refId="Package\Insert &amp; Update - lk_SecurityType.Paths[Merge Join Output]"
              endId="Package\Insert &amp; Update - lk_SecurityType\Conditional Split.Inputs[Conditional Split Input]"
              name="Merge Join Output"
              startId="Package\Insert &amp; Update - lk_SecurityType\Merge Join.Outputs[Merge Join Output]" />
            <path
              refId="Package\Insert &amp; Update - lk_SecurityType.Paths[NewRow]"
              endId="Package\Insert &amp; Update - lk_SecurityType\Insert New row into DB.Inputs[OLE DB Destination Input]"
              name="NewRow"
              startId="Package\Insert &amp; Update - lk_SecurityType\Conditional Split.Outputs[NewRow]" />
            <path
              refId="Package\Insert &amp; Update - lk_SecurityType.Paths[OLE DB Source Output]"
              endId="Package\Insert &amp; Update - lk_SecurityType\DB Sort.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Insert &amp; Update - lk_SecurityType\OLE DB Source.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Insert &amp; Update - lk_SecurityType.Paths[Sort Output]"
              endId="Package\Insert &amp; Update - lk_SecurityType\Merge Join.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Insert &amp; Update - lk_SecurityType\Excel Sort.Outputs[Sort Output]" />
            <path
              refId="Package\Insert &amp; Update - lk_SecurityType.Paths[Sort Output1]"
              endId="Package\Insert &amp; Update - lk_SecurityType\Merge Join.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Insert &amp; Update - lk_SecurityType\DB Sort.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Insert &amp; Update - lk_TransactionType"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{0ef24829-81a9-47a1-ba6e-e1630701b950}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Insert &amp; Update - lk_TransactionType"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Insert &amp; Update - lk_TransactionType\Conditional Split"
              componentClassID="Microsoft.ConditionalSplit"
              contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
              name="Conditional Split"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Insert &amp; Update - lk_TransactionType\Conditional Split.Inputs[Conditional Split Input]"
                  description="Input to the Conditional Split Transformation"
                  name="Conditional Split Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Conditional Split.Inputs[Conditional Split Input].Columns[transactiontypeid]"
                      cachedDataType="i4"
                      cachedName="transactiontypeid"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Merge Join.Outputs[Merge Join Output].Columns[transactiontypeid]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_TransactionType\Conditional Split.Outputs[NewRow]"
                  description="Output 1 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="NewRow"
                  synchronousInputId="Package\Insert &amp; Update - lk_TransactionType\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">[ISNULL](#{Package\Insert &amp; Update - lk_TransactionType\Merge Join.Outputs[Merge Join Output].Columns[transactiontypeid]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">ISNULL(transactiontypeid)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">0</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Insert &amp; Update - lk_TransactionType\Conditional Split.Outputs[ExistingRow]"
                  description="Output 2 of the Conditional Split Transformation"
                  errorOrTruncationOperation="Computation"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="ExistingRow"
                  synchronousInputId="Package\Insert &amp; Update - lk_TransactionType\Conditional Split.Inputs[Conditional Split Input]"
                  truncationRowDisposition="FailComponent">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                      name="Expression">![ISNULL](#{Package\Insert &amp; Update - lk_TransactionType\Merge Join.Outputs[Merge Join Output].Columns[transactiontypeid]})</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the friendly version of the expression. This expression version uses column names."
                      expressionType="Notify"
                      name="FriendlyExpression">!ISNULL(transactiontypeid)</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                      name="EvaluationOrder">1</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Insert &amp; Update - lk_TransactionType\Conditional Split.Outputs[Conditional Split Default Output]"
                  description="Default Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  name="Conditional Split Default Output"
                  synchronousInputId="Package\Insert &amp; Update - lk_TransactionType\Conditional Split.Inputs[Conditional Split Input]">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      name="IsDefaultOut">true</property>
                  </properties>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Insert &amp; Update - lk_TransactionType\Conditional Split.Outputs[Conditional Split Error Output]"
                  description="Error Output of the Conditional Split Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Conditional Split Error Output"
                  synchronousInputId="Package\Insert &amp; Update - lk_TransactionType\Conditional Split.Inputs[Conditional Split Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_TransactionType\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Insert &amp; Update - lk_TransactionType\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Data Conversion.Inputs[Data Conversion Input].Columns[TransactionTypeID]"
                      cachedDataType="r8"
                      cachedName="TransactionTypeID"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Output].Columns[TransactionTypeID]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Data Conversion.Inputs[Data Conversion Input].Columns[TransactionTypeCode]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="TransactionTypeCode"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Output].Columns[TransactionTypeCode]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Data Conversion.Inputs[Data Conversion Input].Columns[TransactionTypeName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="TransactionTypeName"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Output].Columns[TransactionTypeName]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_TransactionType\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\Insert &amp; Update - lk_TransactionType\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Data Conversion.Outputs[Data Conversion Output].Columns[TransactionTypeID_out]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Data Conversion.Outputs[Data Conversion Output].Columns[TransactionTypeID_out]"
                      name="TransactionTypeID_out"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Output].Columns[TransactionTypeID]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Data Conversion.Outputs[Data Conversion Output].Columns[TransactionTypeCode_out]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Data Conversion.Outputs[Data Conversion Output].Columns[TransactionTypeCode_out]"
                      name="TransactionTypeCode_out"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Output].Columns[TransactionTypeCode]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Data Conversion.Outputs[Data Conversion Output].Columns[TransactionTypeName_out]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Data Conversion.Outputs[Data Conversion Output].Columns[TransactionTypeName_out]"
                      name="TransactionTypeName_out"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Output].Columns[TransactionTypeName]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Insert &amp; Update - lk_TransactionType\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\Insert &amp; Update - lk_TransactionType\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_TransactionType\DB Sort"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="DB Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Insert &amp; Update - lk_TransactionType\DB Sort.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\DB Sort.Inputs[Sort Input].Columns[TransactionTypeID]"
                      cachedDataType="i4"
                      cachedName="TransactionTypeID"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\OLE DB Source.Outputs[OLE DB Source Output].Columns[TransactionTypeID]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_TransactionType\DB Sort.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\DB Sort.Outputs[Sort Output].Columns[TransactionTypeID]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\DB Sort.Outputs[Sort Output].Columns[TransactionTypeID]"
                      name="TransactionTypeID"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Insert &amp; Update - lk_TransactionType\OLE DB Source.Outputs[OLE DB Source Output].Columns[TransactionTypeID]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_TransactionType\Excel Sort"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Excel Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Insert &amp; Update - lk_TransactionType\Excel Sort.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Excel Sort.Inputs[Sort Input].Columns[TransactionTypeID_out]"
                      cachedDataType="i4"
                      cachedName="TransactionTypeID_out"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Data Conversion.Outputs[Data Conversion Output].Columns[TransactionTypeID_out]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Excel Sort.Inputs[Sort Input].Columns[TransactionTypeCode_out]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="TransactionTypeCode_out"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Data Conversion.Outputs[Data Conversion Output].Columns[TransactionTypeCode_out]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Excel Sort.Inputs[Sort Input].Columns[TransactionTypeName_out]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="TransactionTypeName_out"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Data Conversion.Outputs[Data Conversion Output].Columns[TransactionTypeName_out]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_TransactionType\Excel Sort.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Excel Sort.Outputs[Sort Output].Columns[TransactionTypeID_out]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Excel Sort.Outputs[Sort Output].Columns[TransactionTypeID_out]"
                      name="TransactionTypeID_out"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Insert &amp; Update - lk_TransactionType\Data Conversion.Outputs[Data Conversion Output].Columns[TransactionTypeID_out]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Excel Sort.Outputs[Sort Output].Columns[TransactionTypeCode_out]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Excel Sort.Outputs[Sort Output].Columns[TransactionTypeCode_out]"
                      name="TransactionTypeCode_out">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Insert &amp; Update - lk_TransactionType\Data Conversion.Outputs[Data Conversion Output].Columns[TransactionTypeCode_out]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Excel Sort.Outputs[Sort Output].Columns[TransactionTypeName_out]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Excel Sort.Outputs[Sort Output].Columns[TransactionTypeName_out]"
                      name="TransactionTypeName_out">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\Insert &amp; Update - lk_TransactionType\Data Conversion.Outputs[Data Conversion Output].Columns[TransactionTypeName_out]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_TransactionType\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">lk_TransactionType$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Insert &amp; Update - lk_TransactionType\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Output].Columns[TransactionTypeID]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Output].ExternalColumns[TransactionTypeID]"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Output].Columns[TransactionTypeID]"
                      name="TransactionTypeID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Output].Columns[TransactionTypeCode]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Output].ExternalColumns[TransactionTypeCode]"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Output].Columns[TransactionTypeCode]"
                      name="TransactionTypeCode"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Output].Columns[TransactionTypeName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Output].ExternalColumns[TransactionTypeName]"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Output].Columns[TransactionTypeName]"
                      name="TransactionTypeName"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Output].ExternalColumns[TransactionTypeID]"
                      dataType="r8"
                      name="TransactionTypeID" />
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Output].ExternalColumns[TransactionTypeCode]"
                      dataType="wstr"
                      length="255"
                      name="TransactionTypeCode" />
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Output].ExternalColumns[TransactionTypeName]"
                      dataType="wstr"
                      length="255"
                      name="TransactionTypeName" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Error Output].Columns[TransactionTypeID]"
                      dataType="r8"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Error Output].Columns[TransactionTypeID]"
                      name="TransactionTypeID" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Error Output].Columns[TransactionTypeCode]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Error Output].Columns[TransactionTypeCode]"
                      name="TransactionTypeCode" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Error Output].Columns[TransactionTypeName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Error Output].Columns[TransactionTypeName]"
                      name="TransactionTypeName" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_TransactionType\Insert New row into DB"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Insert New row into DB"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[lk_TransactionType]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Insert &amp; Update - lk_TransactionType\Insert New row into DB.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DBConnection]"
                  connectionManagerRefId="Package.ConnectionManagers[DBConnection]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Insert &amp; Update - lk_TransactionType\Insert New row into DB.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Insert New row into DB.Inputs[OLE DB Destination Input].Columns[TransactionTypeID]"
                      cachedDataType="i4"
                      cachedName="TransactionTypeID"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_TransactionType\Insert New row into DB.Inputs[OLE DB Destination Input].ExternalColumns[TransactionTypeID]"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Merge Join.Outputs[Merge Join Output].Columns[TransactionTypeID]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Insert New row into DB.Inputs[OLE DB Destination Input].Columns[TransactionTypeCode]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="TransactionTypeCode"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_TransactionType\Insert New row into DB.Inputs[OLE DB Destination Input].ExternalColumns[TransactionTypeCode]"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Merge Join.Outputs[Merge Join Output].Columns[TransactionTypeCode]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Insert New row into DB.Inputs[OLE DB Destination Input].Columns[TransactionTypeName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="TransactionTypeName"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_TransactionType\Insert New row into DB.Inputs[OLE DB Destination Input].ExternalColumns[TransactionTypeName]"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Merge Join.Outputs[Merge Join Output].Columns[TransactionTypeName]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Insert New row into DB.Inputs[OLE DB Destination Input].ExternalColumns[TransactionTypeID]"
                      dataType="i4"
                      name="TransactionTypeID" />
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Insert New row into DB.Inputs[OLE DB Destination Input].ExternalColumns[TransactionTypeCode]"
                      dataType="wstr"
                      length="255"
                      name="TransactionTypeCode" />
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Insert New row into DB.Inputs[OLE DB Destination Input].ExternalColumns[TransactionTypeName]"
                      dataType="wstr"
                      length="255"
                      name="TransactionTypeName" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_TransactionType\Insert New row into DB.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Insert &amp; Update - lk_TransactionType\Insert New row into DB.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Insert New row into DB.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Insert New row into DB.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Insert New row into DB.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Insert New row into DB.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_TransactionType\Merge Join"
              componentClassID="Microsoft.MergeJoin"
              contactInfo="Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources."
              name="Merge Join"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of join to perform."
                  name="JoinType"
                  typeConverter="JoinType">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the number of columns in the ordering key."
                  name="NumKeyColumns">1</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the null values are treated as equal values."
                  name="TreatNullsAsEqual">true</property>
                <property
                  dataType="System.Int32"
                  description="Indicates the requested maximum buffers per input before blocking."
                  name="MaxBuffersPerInput">5</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Insert &amp; Update - lk_TransactionType\Merge Join.Inputs[Merge Join Left Input]"
                  hasSideEffects="true"
                  name="Merge Join Left Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Merge Join.Inputs[Merge Join Left Input].Columns[TransactionTypeID_out]"
                      cachedDataType="i4"
                      cachedName="TransactionTypeID_out"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Excel Sort.Outputs[Sort Output].Columns[TransactionTypeID_out]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Merge Join.Inputs[Merge Join Left Input].Columns[TransactionTypeCode_out]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="TransactionTypeCode_out"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Excel Sort.Outputs[Sort Output].Columns[TransactionTypeCode_out]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Merge Join.Inputs[Merge Join Left Input].Columns[TransactionTypeName_out]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="TransactionTypeName_out"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Excel Sort.Outputs[Sort Output].Columns[TransactionTypeName_out]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
                <input
                  refId="Package\Insert &amp; Update - lk_TransactionType\Merge Join.Inputs[Merge Join Right Input]"
                  hasSideEffects="true"
                  name="Merge Join Right Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Merge Join.Inputs[Merge Join Right Input].Columns[TransactionTypeID]"
                      cachedDataType="i4"
                      cachedName="TransactionTypeID"
                      cachedSortKeyPosition="1"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\DB Sort.Outputs[Sort Output].Columns[TransactionTypeID]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_TransactionType\Merge Join.Outputs[Merge Join Output]"
                  isSorted="true"
                  name="Merge Join Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Merge Join.Outputs[Merge Join Output].Columns[transactiontypeid]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Merge Join.Outputs[Merge Join Output].Columns[transactiontypeid]"
                      name="transactiontypeid">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Insert &amp; Update - lk_TransactionType\Merge Join.Inputs[Merge Join Right Input].Columns[TransactionTypeID]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Merge Join.Outputs[Merge Join Output].Columns[TransactionTypeID]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Merge Join.Outputs[Merge Join Output].Columns[TransactionTypeID]"
                      name="TransactionTypeID"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Insert &amp; Update - lk_TransactionType\Merge Join.Inputs[Merge Join Left Input].Columns[TransactionTypeID_out]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Merge Join.Outputs[Merge Join Output].Columns[TransactionTypeCode]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Merge Join.Outputs[Merge Join Output].Columns[TransactionTypeCode]"
                      name="TransactionTypeCode">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Insert &amp; Update - lk_TransactionType\Merge Join.Inputs[Merge Join Left Input].Columns[TransactionTypeCode_out]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Merge Join.Outputs[Merge Join Output].Columns[TransactionTypeName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Merge Join.Outputs[Merge Join Output].Columns[TransactionTypeName]"
                      name="TransactionTypeName">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The input column associated with this output column"
                          name="InputColumnID">#{Package\Insert &amp; Update - lk_TransactionType\Merge Join.Inputs[Merge Join Left Input].Columns[TransactionTypeName_out]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_TransactionType\OLE DB Source"
              componentClassID="Microsoft.OLEDBSource"
              contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
              description="OLE DB Source"
              name="OLE DB Source"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[lk_TransactionType]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mappings between the parameters in the SQL command and variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Insert &amp; Update - lk_TransactionType\OLE DB Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DBConnection]"
                  connectionManagerRefId="Package.ConnectionManagers[DBConnection]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_TransactionType\OLE DB Source.Outputs[OLE DB Source Output]"
                  name="OLE DB Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\OLE DB Source.Outputs[OLE DB Source Output].Columns[TransactionTypeID]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_TransactionType\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[TransactionTypeID]"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\OLE DB Source.Outputs[OLE DB Source Output].Columns[TransactionTypeID]"
                      name="TransactionTypeID"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\OLE DB Source.Outputs[OLE DB Source Output].Columns[TransactionTypeCode]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_TransactionType\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[TransactionTypeCode]"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\OLE DB Source.Outputs[OLE DB Source Output].Columns[TransactionTypeCode]"
                      name="TransactionTypeCode"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\OLE DB Source.Outputs[OLE DB Source Output].Columns[TransactionTypeName]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_TransactionType\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[TransactionTypeName]"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\OLE DB Source.Outputs[OLE DB Source Output].Columns[TransactionTypeName]"
                      name="TransactionTypeName"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[TransactionTypeID]"
                      dataType="i4"
                      name="TransactionTypeID" />
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[TransactionTypeCode]"
                      dataType="wstr"
                      length="255"
                      name="TransactionTypeCode" />
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\OLE DB Source.Outputs[OLE DB Source Output].ExternalColumns[TransactionTypeName]"
                      dataType="wstr"
                      length="255"
                      name="TransactionTypeName" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Insert &amp; Update - lk_TransactionType\OLE DB Source.Outputs[OLE DB Source Error Output]"
                  isErrorOut="true"
                  name="OLE DB Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[TransactionTypeID]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[TransactionTypeID]"
                      name="TransactionTypeID" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[TransactionTypeCode]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[TransactionTypeCode]"
                      name="TransactionTypeCode" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[TransactionTypeName]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[TransactionTypeName]"
                      name="TransactionTypeName" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\OLE DB Source.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Insert &amp; Update - lk_TransactionType\Update Existing row in DB"
              componentClassID="Microsoft.OLEDBCommand"
              contactInfo="OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2"
              description="Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time."
              name="Update Existing row in DB"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">update dbo.lk_TransactionType
set TransactionTypeCode= ?, TransactionTypeName= ? 
where TransactionTypeID= ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Insert &amp; Update - lk_TransactionType\Update Existing row in DB.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[DBConnection]"
                  connectionManagerRefId="Package.ConnectionManagers[DBConnection]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Insert &amp; Update - lk_TransactionType\Update Existing row in DB.Inputs[OLE DB Command Input]"
                  errorOrTruncationOperation="Command Execution"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Command Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Update Existing row in DB.Inputs[OLE DB Command Input].Columns[TransactionTypeCode]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="TransactionTypeCode"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_TransactionType\Update Existing row in DB.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Merge Join.Outputs[Merge Join Output].Columns[TransactionTypeCode]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Update Existing row in DB.Inputs[OLE DB Command Input].Columns[TransactionTypeName]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="TransactionTypeName"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_TransactionType\Update Existing row in DB.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Merge Join.Outputs[Merge Join Output].Columns[TransactionTypeName]" />
                    <inputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Update Existing row in DB.Inputs[OLE DB Command Input].Columns[TransactionTypeID]"
                      cachedDataType="i4"
                      cachedName="TransactionTypeID"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\Insert &amp; Update - lk_TransactionType\Update Existing row in DB.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Merge Join.Outputs[Merge Join Output].Columns[TransactionTypeID]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Update Existing row in DB.Inputs[OLE DB Command Input].ExternalColumns[Param_0]"
                      dataType="wstr"
                      length="255"
                      name="Param_0">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Update Existing row in DB.Inputs[OLE DB Command Input].ExternalColumns[Param_1]"
                      dataType="wstr"
                      length="255"
                      name="Param_1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">65</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Update Existing row in DB.Inputs[OLE DB Command Input].ExternalColumns[Param_2]"
                      dataType="i4"
                      name="Param_2">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Parameter information.  Matches OLE DB's DBPARAMFLAGSENUM values."
                          name="DBParamInfoFlags">81</property>
                      </properties>
                    </externalMetadataColumn>
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Insert &amp; Update - lk_TransactionType\Update Existing row in DB.Outputs[OLE DB Command Output]"
                  exclusionGroup="1"
                  name="OLE DB Command Output"
                  synchronousInputId="Package\Insert &amp; Update - lk_TransactionType\Update Existing row in DB.Inputs[OLE DB Command Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Insert &amp; Update - lk_TransactionType\Update Existing row in DB.Outputs[OLE DB Command Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Command Error Output"
                  synchronousInputId="Package\Insert &amp; Update - lk_TransactionType\Update Existing row in DB.Inputs[OLE DB Command Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Update Existing row in DB.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Update Existing row in DB.Outputs[OLE DB Command Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Insert &amp; Update - lk_TransactionType\Update Existing row in DB.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Insert &amp; Update - lk_TransactionType\Update Existing row in DB.Outputs[OLE DB Command Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Insert &amp; Update - lk_TransactionType.Paths[Data Conversion Output]"
              endId="Package\Insert &amp; Update - lk_TransactionType\Excel Sort.Inputs[Sort Input]"
              name="Data Conversion Output"
              startId="Package\Insert &amp; Update - lk_TransactionType\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\Insert &amp; Update - lk_TransactionType.Paths[Excel Source Output]"
              endId="Package\Insert &amp; Update - lk_TransactionType\Data Conversion.Inputs[Data Conversion Input]"
              name="Excel Source Output"
              startId="Package\Insert &amp; Update - lk_TransactionType\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\Insert &amp; Update - lk_TransactionType.Paths[ExistingRow]"
              endId="Package\Insert &amp; Update - lk_TransactionType\Update Existing row in DB.Inputs[OLE DB Command Input]"
              name="ExistingRow"
              startId="Package\Insert &amp; Update - lk_TransactionType\Conditional Split.Outputs[ExistingRow]" />
            <path
              refId="Package\Insert &amp; Update - lk_TransactionType.Paths[Merge Join Output]"
              endId="Package\Insert &amp; Update - lk_TransactionType\Conditional Split.Inputs[Conditional Split Input]"
              name="Merge Join Output"
              startId="Package\Insert &amp; Update - lk_TransactionType\Merge Join.Outputs[Merge Join Output]" />
            <path
              refId="Package\Insert &amp; Update - lk_TransactionType.Paths[NewRow]"
              endId="Package\Insert &amp; Update - lk_TransactionType\Insert New row into DB.Inputs[OLE DB Destination Input]"
              name="NewRow"
              startId="Package\Insert &amp; Update - lk_TransactionType\Conditional Split.Outputs[NewRow]" />
            <path
              refId="Package\Insert &amp; Update - lk_TransactionType.Paths[OLE DB Source Output]"
              endId="Package\Insert &amp; Update - lk_TransactionType\DB Sort.Inputs[Sort Input]"
              name="OLE DB Source Output"
              startId="Package\Insert &amp; Update - lk_TransactionType\OLE DB Source.Outputs[OLE DB Source Output]" />
            <path
              refId="Package\Insert &amp; Update - lk_TransactionType.Paths[Sort Output]"
              endId="Package\Insert &amp; Update - lk_TransactionType\Merge Join.Inputs[Merge Join Left Input]"
              name="Sort Output"
              startId="Package\Insert &amp; Update - lk_TransactionType\Excel Sort.Outputs[Sort Output]" />
            <path
              refId="Package\Insert &amp; Update - lk_TransactionType.Paths[Sort Output1]"
              endId="Package\Insert &amp; Update - lk_TransactionType\Merge Join.Inputs[Merge Join Right Input]"
              name="Sort Output"
              startId="Package\Insert &amp; Update - lk_TransactionType\DB Sort.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{EF3225DE-952B-4BA8-BCC2-E96CE4C53936}"
      DTS:From="Package\Insert &amp; Update - lk_ErrorMessage"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Insert &amp; Update - lk_ImportStatus" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{B579633C-D68D-4A8F-8B6D-87CE48803A6D}"
      DTS:From="Package\Insert &amp; Update - lk_ImportStatus"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Insert &amp; Update - lk_SecurityType" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{F34F481E-B922-499A-A40E-81772B09F26B}"
      DTS:From="Package\Insert &amp; Update - lk_SecurityType"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Insert &amp; Update - lk_TransactionType" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="179,42"
          Id="Package\Insert &amp; Update - lk_ErrorMessage"
          TopLeft="494,162" />
        <NodeLayout
          Size="181,42"
          Id="Package\Insert &amp; Update - lk_ImportStatus"
          TopLeft="494,264" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="584,204">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="188,42"
          Id="Package\Insert &amp; Update - lk_SecurityType"
          TopLeft="494,366" />
        <NodeLayout
          Size="188,42"
          Id="Package\Insert &amp; Update - lk_TransactionType"
          TopLeft="492,468" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="586.25,306">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="587,408">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Insert &amp; Update - lk_ErrorMessage">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="139,42"
          Id="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source"
          TopLeft="436,42" />
        <NodeLayout
          Size="190,42"
          Id="Package\Insert &amp; Update - lk_ErrorMessage\Insert New row into DB"
          TopLeft="391,576" />
        <NodeLayout
          Size="150,42"
          Id="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source"
          TopLeft="618,43" />
        <NodeLayout
          Size="156,42"
          Id="Package\Insert &amp; Update - lk_ErrorMessage\Data Conversion"
          TopLeft="429,148" />
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_ErrorMessage.Paths[Excel Source Output]"
          TopLeft="506.25,84">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,64"
              Start="0,0"
              End="0,56.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,56.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="126,42"
          Id="Package\Insert &amp; Update - lk_ErrorMessage\Excel Sort"
          TopLeft="450.5,255.5" />
        <NodeLayout
          Size="115,42"
          Id="Package\Insert &amp; Update - lk_ErrorMessage\DB Sort"
          TopLeft="632.5,256.5" />
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_ErrorMessage.Paths[Data Conversion Output]"
          TopLeft="510.25,190">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65.5"
              Start="0,0"
              End="0,58">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_ErrorMessage.Paths[OLE DB Source Output]"
          TopLeft="691.5,85">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,171.5"
              Start="0,0"
              End="0,164">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,164" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="155,42"
          Id="Package\Insert &amp; Update - lk_ErrorMessage\Conditional Split"
          TopLeft="522,423" />
        <NodeLayout
          Size="130,42"
          Id="Package\Insert &amp; Update - lk_ErrorMessage\Merge Join"
          TopLeft="535,342" />
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_ErrorMessage.Paths[Sort Output]"
          TopLeft="513.5,297.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="66.1666666666666,44.5"
              Start="0,0"
              End="66.1666666666666,37">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.3753799392097" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.3753799392097"
                    Point2="0,26.3753799392097"
                    Point3="4,26.3753799392097" />
                  <mssgle:LineSegment
                    End="62.1666666666666,26.3753799392097" />
                  <mssgle:CubicBezierSegment
                    Point1="62.1666666666666,26.3753799392097"
                    Point2="66.1666666666666,26.3753799392097"
                    Point3="66.1666666666666,30.3753799392097" />
                  <mssgle:LineSegment
                    End="66.1666666666666,37" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_ErrorMessage.Paths[Sort Output1]"
          TopLeft="690,298.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-69.6666666666666,43.5"
              Start="0,0"
              End="-69.6666666666666,36">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.7826747720365" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.7826747720365"
                    Point2="0,25.7826747720365"
                    Point3="-4,25.7826747720365" />
                  <mssgle:LineSegment
                    End="-65.6666666666666,25.7826747720365" />
                  <mssgle:CubicBezierSegment
                    Point1="-65.6666666666666,25.7826747720365"
                    Point2="-69.6666666666666,25.7826747720365"
                    Point3="-69.6666666666666,29.7826747720365" />
                  <mssgle:LineSegment
                    End="-69.6666666666666,36" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_ErrorMessage.Paths[Merge Join Output]"
          TopLeft="599.75,384">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39"
              Start="0,0"
              End="0,31.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_ErrorMessage.Paths[NewRow]"
          TopLeft="575,465">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-89,111"
              Start="0,0"
              End="-89,103.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.0804597701149" />
                  <mssgle:CubicBezierSegment
                    Point1="0,41.0804597701149"
                    Point2="0,45.0804597701149"
                    Point3="-4,45.0804597701149" />
                  <mssgle:LineSegment
                    End="-85,45.0804597701149" />
                  <mssgle:CubicBezierSegment
                    Point1="-85,45.0804597701149"
                    Point2="-89,45.0804597701149"
                    Point3="-89,49.0804597701149" />
                  <mssgle:LineSegment
                    End="-89,103.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-64.26404296875,50.0804597701149,39.5280859375,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="202,42"
          Id="Package\Insert &amp; Update - lk_ErrorMessage\Update Existing row in DB"
          TopLeft="615,575" />
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_ErrorMessage.Paths[ExistingRow]"
          TopLeft="624,465">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="92,110"
              Start="0,0"
              End="92,102.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.6743295019157" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40.6743295019157"
                    Point2="0,44.6743295019157"
                    Point3="4,44.6743295019157" />
                  <mssgle:LineSegment
                    End="88,44.6743295019157" />
                  <mssgle:CubicBezierSegment
                    Point1="88,44.6743295019157"
                    Point2="92,44.6743295019157"
                    Point3="92,48.6743295019157" />
                  <mssgle:LineSegment
                    End="92,102.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="18.88595703125,49.6743295019157,54.2280859375,11.384765625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Insert &amp; Update - lk_ErrorMessage\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Insert &amp; Update - lk_ErrorMessage\Insert New row into DB">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Insert &amp; Update - lk_ErrorMessage\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Insert &amp; Update - lk_ImportStatus">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="115,42"
          Id="Package\Insert &amp; Update - lk_ImportStatus\DB Sort"
          TopLeft="632.5,256.5" />
        <NodeLayout
          Size="126,42"
          Id="Package\Insert &amp; Update - lk_ImportStatus\Excel Sort"
          TopLeft="450.5,255.5" />
        <NodeLayout
          Size="150,42"
          Id="Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source"
          TopLeft="616,41" />
        <NodeLayout
          Size="156,42"
          Id="Package\Insert &amp; Update - lk_ImportStatus\Data Conversion"
          TopLeft="429,148" />
        <NodeLayout
          Size="190,42"
          Id="Package\Insert &amp; Update - lk_ImportStatus\Insert New row into DB"
          TopLeft="391,576" />
        <NodeLayout
          Size="155,42"
          Id="Package\Insert &amp; Update - lk_ImportStatus\Conditional Split"
          TopLeft="522,423" />
        <NodeLayout
          Size="139,42"
          Id="Package\Insert &amp; Update - lk_ImportStatus\Excel Source"
          TopLeft="436,42" />
        <NodeLayout
          Size="202,42"
          Id="Package\Insert &amp; Update - lk_ImportStatus\Update Existing row in DB"
          TopLeft="615,575" />
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_ImportStatus.Paths[Excel Source Output]"
          TopLeft="506.25,84">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,64"
              Start="0,0"
              End="0,56.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,56.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_ImportStatus.Paths[ExistingRow]"
          TopLeft="624,465">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="92,110"
              Start="0,0"
              End="92,102.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.6743295019157" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40.6743295019157"
                    Point2="0,44.6743295019157"
                    Point3="4,44.6743295019157" />
                  <mssgle:LineSegment
                    End="88,44.6743295019157" />
                  <mssgle:CubicBezierSegment
                    Point1="88,44.6743295019157"
                    Point2="92,44.6743295019157"
                    Point3="92,48.6743295019157" />
                  <mssgle:LineSegment
                    End="92,102.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="18.88595703125,49.6743295019157,54.2280859375,11.384765625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_ImportStatus.Paths[OLE DB Source Output]"
          TopLeft="690.5,83">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,173.5"
              Start="0,0"
              End="0,166">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,166" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_ImportStatus.Paths[Data Conversion Output]"
          TopLeft="510.25,190">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65.5"
              Start="0,0"
              End="0,58">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_ImportStatus.Paths[NewRow]"
          TopLeft="575,465">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-89,111"
              Start="0,0"
              End="-89,103.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.0804597701149" />
                  <mssgle:CubicBezierSegment
                    Point1="0,41.0804597701149"
                    Point2="0,45.0804597701149"
                    Point3="-4,45.0804597701149" />
                  <mssgle:LineSegment
                    End="-85,45.0804597701149" />
                  <mssgle:CubicBezierSegment
                    Point1="-85,45.0804597701149"
                    Point2="-89,45.0804597701149"
                    Point3="-89,49.0804597701149" />
                  <mssgle:LineSegment
                    End="-89,103.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-64.26404296875,50.0804597701149,39.5280859375,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="130,42"
          Id="Package\Insert &amp; Update - lk_ImportStatus\Merge Join"
          TopLeft="530,336" />
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_ImportStatus.Paths[Sort Output]"
          TopLeft="513.5,297.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="81.5,38.5"
              Start="0,0"
              End="81.5,31">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.25" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.25"
                    Point2="0,19.25"
                    Point3="4,19.25" />
                  <mssgle:LineSegment
                    End="77.5,19.25" />
                  <mssgle:CubicBezierSegment
                    Point1="77.5,19.25"
                    Point2="81.5,19.25"
                    Point3="81.5,23.25" />
                  <mssgle:LineSegment
                    End="81.5,31" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_ImportStatus.Paths[Sort Output1]"
          TopLeft="690,298.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-74.6666666666666,37.5"
              Start="0,0"
              End="-74.6666666666666,30">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.226443768997" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.226443768997"
                    Point2="0,22.226443768997"
                    Point3="-4,22.226443768997" />
                  <mssgle:LineSegment
                    End="-70.6666666666666,22.226443768997" />
                  <mssgle:CubicBezierSegment
                    Point1="-70.6666666666666,22.226443768997"
                    Point2="-74.6666666666666,22.226443768997"
                    Point3="-74.6666666666666,26.226443768997" />
                  <mssgle:LineSegment
                    End="-74.6666666666666,30" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_ImportStatus.Paths[Merge Join Output]"
          TopLeft="597.25,378">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45"
              Start="0,0"
              End="0,37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Insert &amp; Update - lk_ImportStatus\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Insert &amp; Update - lk_ImportStatus\Insert New row into DB">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Insert &amp; Update - lk_ImportStatus\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Insert &amp; Update - lk_SecurityType">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="115,42"
          Id="Package\Insert &amp; Update - lk_SecurityType\DB Sort"
          TopLeft="633.5,256.5" />
        <NodeLayout
          Size="126,42"
          Id="Package\Insert &amp; Update - lk_SecurityType\Excel Sort"
          TopLeft="450.5,255.5" />
        <NodeLayout
          Size="150,42"
          Id="Package\Insert &amp; Update - lk_SecurityType\OLE DB Source"
          TopLeft="617,43" />
        <NodeLayout
          Size="156,42"
          Id="Package\Insert &amp; Update - lk_SecurityType\Data Conversion"
          TopLeft="429,148" />
        <NodeLayout
          Size="190,42"
          Id="Package\Insert &amp; Update - lk_SecurityType\Insert New row into DB"
          TopLeft="391,576" />
        <NodeLayout
          Size="155,42"
          Id="Package\Insert &amp; Update - lk_SecurityType\Conditional Split"
          TopLeft="522,423" />
        <NodeLayout
          Size="139,42"
          Id="Package\Insert &amp; Update - lk_SecurityType\Excel Source"
          TopLeft="436,42" />
        <NodeLayout
          Size="202,42"
          Id="Package\Insert &amp; Update - lk_SecurityType\Update Existing row in DB"
          TopLeft="615,575" />
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_SecurityType.Paths[Excel Source Output]"
          TopLeft="506.25,84">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,64"
              Start="0,0"
              End="0,56.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,56.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_SecurityType.Paths[OLE DB Source Output]"
          TopLeft="691.5,85">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,171.5"
              Start="0,0"
              End="0,164">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,164" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_SecurityType.Paths[Data Conversion Output]"
          TopLeft="510.25,190">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65.5"
              Start="0,0"
              End="0,58">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_SecurityType.Paths[NewRow]"
          TopLeft="575,465">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-89,111"
              Start="0,0"
              End="-89,103.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.0804597701149" />
                  <mssgle:CubicBezierSegment
                    Point1="0,41.0804597701149"
                    Point2="0,45.0804597701149"
                    Point3="-4,45.0804597701149" />
                  <mssgle:LineSegment
                    End="-85,45.0804597701149" />
                  <mssgle:CubicBezierSegment
                    Point1="-85,45.0804597701149"
                    Point2="-89,45.0804597701149"
                    Point3="-89,49.0804597701149" />
                  <mssgle:LineSegment
                    End="-89,103.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-64.26404296875,50.0804597701149,39.5280859375,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_SecurityType.Paths[ExistingRow]"
          TopLeft="624,465">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="92,110"
              Start="0,0"
              End="92,102.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.6743295019157" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40.6743295019157"
                    Point2="0,44.6743295019157"
                    Point3="4,44.6743295019157" />
                  <mssgle:LineSegment
                    End="88,44.6743295019157" />
                  <mssgle:CubicBezierSegment
                    Point1="88,44.6743295019157"
                    Point2="92,44.6743295019157"
                    Point3="92,48.6743295019157" />
                  <mssgle:LineSegment
                    End="92,102.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="18.88595703125,49.6743295019157,54.2280859375,11.384765625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="130,42"
          Id="Package\Insert &amp; Update - lk_SecurityType\Merge Join"
          TopLeft="532,335" />
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_SecurityType.Paths[Sort Output]"
          TopLeft="513.5,297.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="83.5,37.5"
              Start="0,0"
              End="83.5,30">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.75" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.75"
                    Point2="0,18.75"
                    Point3="4,18.75" />
                  <mssgle:LineSegment
                    End="79.5,18.75" />
                  <mssgle:CubicBezierSegment
                    Point1="79.5,18.75"
                    Point2="83.5,18.75"
                    Point3="83.5,22.75" />
                  <mssgle:LineSegment
                    End="83.5,30" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_SecurityType.Paths[Sort Output1]"
          TopLeft="691,298.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-73.6666666666666,36.5"
              Start="0,0"
              End="-73.6666666666666,29">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.6337386018237" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.6337386018237"
                    Point2="0,21.6337386018237"
                    Point3="-4,21.6337386018237" />
                  <mssgle:LineSegment
                    End="-69.6666666666666,21.6337386018237" />
                  <mssgle:CubicBezierSegment
                    Point1="-69.6666666666666,21.6337386018237"
                    Point2="-73.6666666666666,21.6337386018237"
                    Point3="-73.6666666666666,25.6337386018237" />
                  <mssgle:LineSegment
                    End="-73.6666666666666,29" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_SecurityType.Paths[Merge Join Output]"
          TopLeft="598.25,377">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46"
              Start="0,0"
              End="0,38.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Insert &amp; Update - lk_SecurityType\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Insert &amp; Update - lk_SecurityType\Insert New row into DB">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Insert &amp; Update - lk_SecurityType\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Insert &amp; Update - lk_TransactionType">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="115,42"
          Id="Package\Insert &amp; Update - lk_TransactionType\DB Sort"
          TopLeft="632.5,256.5" />
        <NodeLayout
          Size="126,42"
          Id="Package\Insert &amp; Update - lk_TransactionType\Excel Sort"
          TopLeft="450.5,255.5" />
        <NodeLayout
          Size="150,42"
          Id="Package\Insert &amp; Update - lk_TransactionType\OLE DB Source"
          TopLeft="620,41" />
        <NodeLayout
          Size="156,42"
          Id="Package\Insert &amp; Update - lk_TransactionType\Data Conversion"
          TopLeft="429,148" />
        <NodeLayout
          Size="190,42"
          Id="Package\Insert &amp; Update - lk_TransactionType\Insert New row into DB"
          TopLeft="391,576" />
        <NodeLayout
          Size="155,42"
          Id="Package\Insert &amp; Update - lk_TransactionType\Conditional Split"
          TopLeft="522,423" />
        <NodeLayout
          Size="139,42"
          Id="Package\Insert &amp; Update - lk_TransactionType\Excel Source"
          TopLeft="436,42" />
        <NodeLayout
          Size="202,42"
          Id="Package\Insert &amp; Update - lk_TransactionType\Update Existing row in DB"
          TopLeft="615,575" />
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_TransactionType.Paths[Excel Source Output]"
          TopLeft="506.25,84">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,64"
              Start="0,0"
              End="0,56.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,56.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_TransactionType.Paths[OLE DB Source Output]"
          TopLeft="692.5,83">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,173.5"
              Start="0,0"
              End="0,166">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,166" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_TransactionType.Paths[Data Conversion Output]"
          TopLeft="510.25,190">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65.5"
              Start="0,0"
              End="0,58">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_TransactionType.Paths[NewRow]"
          TopLeft="575,465">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-89,111"
              Start="0,0"
              End="-89,103.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.0804597701149" />
                  <mssgle:CubicBezierSegment
                    Point1="0,41.0804597701149"
                    Point2="0,45.0804597701149"
                    Point3="-4,45.0804597701149" />
                  <mssgle:LineSegment
                    End="-85,45.0804597701149" />
                  <mssgle:CubicBezierSegment
                    Point1="-85,45.0804597701149"
                    Point2="-89,45.0804597701149"
                    Point3="-89,49.0804597701149" />
                  <mssgle:LineSegment
                    End="-89,103.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-64.26404296875,50.0804597701149,39.5280859375,9.421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_TransactionType.Paths[ExistingRow]"
          TopLeft="624,465">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="92,110"
              Start="0,0"
              End="92,102.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.6743295019157" />
                  <mssgle:CubicBezierSegment
                    Point1="0,40.6743295019157"
                    Point2="0,44.6743295019157"
                    Point3="4,44.6743295019157" />
                  <mssgle:LineSegment
                    End="88,44.6743295019157" />
                  <mssgle:CubicBezierSegment
                    Point1="88,44.6743295019157"
                    Point2="92,44.6743295019157"
                    Point3="92,48.6743295019157" />
                  <mssgle:LineSegment
                    End="92,102.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="18.88595703125,49.6743295019157,54.2280859375,11.384765625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="130,42"
          Id="Package\Insert &amp; Update - lk_TransactionType\Merge Join"
          TopLeft="526,334" />
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_TransactionType.Paths[Sort Output]"
          TopLeft="513.5,297.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="77.5,36.5"
              Start="0,0"
              End="77.5,29">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.25" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.25"
                    Point2="0,18.25"
                    Point3="4,18.25" />
                  <mssgle:LineSegment
                    End="73.5,18.25" />
                  <mssgle:CubicBezierSegment
                    Point1="73.5,18.25"
                    Point2="77.5,18.25"
                    Point3="77.5,22.25" />
                  <mssgle:LineSegment
                    End="77.5,29" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_TransactionType.Paths[Sort Output1]"
          TopLeft="690,298.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-78.6666666666666,35.5"
              Start="0,0"
              End="-78.6666666666666,28">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.0410334346505" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.0410334346505"
                    Point2="0,21.0410334346505"
                    Point3="-4,21.0410334346505" />
                  <mssgle:LineSegment
                    End="-74.6666666666666,21.0410334346505" />
                  <mssgle:CubicBezierSegment
                    Point1="-74.6666666666666,21.0410334346505"
                    Point2="-78.6666666666666,21.0410334346505"
                    Point3="-78.6666666666666,25.0410334346505" />
                  <mssgle:LineSegment
                    End="-78.6666666666666,28" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Insert &amp; Update - lk_TransactionType.Paths[Merge Join Output]"
          TopLeft="591,376">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="8.5,47"
              Start="0,0"
              End="8.5,39.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.5"
                    Point2="0,23.5"
                    Point3="4,23.5" />
                  <mssgle:LineSegment
                    End="4.5,23.5" />
                  <mssgle:CubicBezierSegment
                    Point1="4.5,23.5"
                    Point2="8.5,23.5"
                    Point3="8.5,27.5" />
                  <mssgle:LineSegment
                    End="8.5,39.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Insert &amp; Update - lk_TransactionType\OLE DB Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Insert &amp; Update - lk_TransactionType\Insert New row into DB">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Insert &amp; Update - lk_TransactionType\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>